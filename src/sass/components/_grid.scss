@mixin grid-gutter($collapsed: false) {
    float: left;
    position: relative;
    @if ($collapsed == false) {
        padding: 0 ($column-gutter / 2);
    }
    @if ($collapsed == true) {
        padding: 0 0;
    }
}

/*
    TODO: these should be a single mixin
*/
@mixin grid-row {
    margin: 0 auto;
    max-width: $max-row-width;
    width: 100%;
}

@mixin grid-row-nested {
    width: auto;
    margin-left: 0 - ($column-gutter / 2);
    margin-right: 0 - ($column-gutter / 2);
    max-width: none;
}

@function grid-calc($colspan: 1, $totalcols: 12) {
    @return percentage($colspan / $totalcols);
}

@mixin grid-column(
$colspan: 1,
$totalcols: 12,
$offset: false,
$push: false,
$pull: false,
$center: false,
$gutters: true
) {
    width: grid-calc($colspan, $totalcols);
    @if ($gutters) {
        @include grid-gutter();
    }
    @if ($offset) {
        margin-left: grid-calc($offset, $totalcols);
    }
    @if ($push) {
        right: auto;
        left: grid-calc($colspan, $totalcols);
    }
    @if ($pull) {
        right: grid-calc($colspan, $totalcols);
        left: auto;
    }
    @if ($center) {
        margin: 0 auto;
        float: none;
    }
}

@mixin push-pull-reset {
    left: auto;
    right: auto;
}

/*
    Examples of class names this will generate:
    .small-1-of-5
    .l-medium-3-of-5
    .x-large-5-of-12
    .xx-large-7-of-12
*/
@each $breakpoint-name, $breakpoint-size in $breakpoints {
    @media #{$breakpoint-size} {
        @each $totalcols in $grid-column-sets {
            @for $colspan from 1 through $totalcols {
                .#{$breakpoint-name}-#{$colspan}-of-#{$totalcols} {
                    @include grid-column($colspan, $totalcols, $gutters: false);
                }

                .#{$breakpoint-name}-push-#{$colspan}-of-#{$totalcols} {
                    right: auto;
                    left: grid-calc($colspan, $totalcols);
                }

                .#{$breakpoint-name}-pull-#{$colspan}-of-#{$totalcols} {
                    right: grid-calc($colspan, $totalcols);
                    left: auto;
                }
                .#{$breakpoint-name}-push-reset,
                .#{$breakpoint-name}-pull-reset {
                    @include push-pull-reset;
                }
            }
        }
    }
}

.grid-row {
    @include grid-row;
    @include clearfix;
}

.grid-row .grid-row {
    @include grid-row-nested
}

.grid-column {
    @include grid-gutter();
}

.collapsed .grid-column {
    @include grid-gutter($collapsed: true);
}

.not-collapsed .grid-column {
    @include grid-gutter();
}